<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.jabusim.mapper.SearchLicenseMapper">
	
	<resultMap id="searchLicenseBean" type="kr.co.jabusim.beans.SearchLicenseBean">
	    <result property="license_idx" column="license_idx"/>
	    <result property="license_name" column="license_name"/>
	    <result property="license_type" column="license_type"/>
	    <result property="majorCode" column="majorCode"/>
	    <result property="minorCode" column="minorCode"/>
	</resultMap>

	<select id="selectMajorCategories" parameterType="map" resultMap="searchLicenseBean">
		SELECT distinct
		    l.license_idx,
		    l.license_name,
		    l.license_type,
		    l.license_maincategory AS majorCode,
		    l.license_subcategory AS minorCode
	    FROM license_table l
	    <where>
	        <if test="selectMajorCategories != null">
				<foreach item="majorCategory" index="index" collection="selectMajorCategories" open="(" separator="OR" close=")">
				    l.license_maincategory = #{index}
				    <if test="selectMajorCategories[index] != null and !selectMajorCategories[index].isEmpty()">
				        AND l.license_subcategory IN
				        <foreach item="minor" collection="selectMajorCategories[index]" open="(" separator="," close=")">
				            #{minor}
				        </foreach>
				    </if>
				</foreach>
	        </if>
	    </where>
	    ORDER BY l.license_maincategory
	</select>

	<select id="selectMinorCategories" parameterType="list" resultMap="searchLicenseBean">
		SELECT distinct
		    l.license_idx,
		    l.license_name,
		    l.license_type,
		    l.license_maincategory AS majorCode,
		    l.license_subcategory AS minorCode
	    FROM license_table l
	    WHERE l.license_subcategory IN
	    <foreach item="minor" index="index" collection="selectMinorCategories" open="(" separator="," close=")">
	        #{minor}
	    </foreach>
	    ORDER BY l.license_type
	</select>

	<select id="selectKindCategories" parameterType="string" resultMap="searchLicenseBean">
		SELECT distinct
		    l.license_idx,
		    l.license_name,
		    l.license_type,
		    l.license_maincategory AS majorCode,
		    l.license_subcategory AS minorCode
	    FROM license_table l
	    WHERE l.license_type = #{selectKindCategories}
	    ORDER BY l.license_maincategory
	</select>

	<select id="selectAnyCategories" parameterType="map" resultMap="searchLicenseBean">
	    SELECT DISTINCT
	        l.license_idx,
	        l.license_name,
	        l.license_type,
	        l.license_maincategory AS majorCode,
	        l.license_subcategory AS minorCode
	    FROM license_table l
	    WHERE
	        1=1
	        <if test="majorCategories != null and !majorCategories.isEmpty()">
	            AND (
	                <foreach item="majorCategory" index="index" collection="majorCategories" separator="OR" open="(" close=")">
	                    l.license_maincategory = #{index}
	                    <if test="majorCategories[index] != null and !majorCategories[index].isEmpty()">
	                        AND l.license_subcategory IN
	                        <foreach item="minor" collection="majorCategories[index]" open="(" separator="," close=")">
	                            #{minor}
	                        </foreach>
	                    </if>
	                </foreach>
	            )
	        </if>
	        <if test="minorCodes != null and !minorCodes.isEmpty()">
	            <choose>
	                <when test="majorCategories != null and !majorCategories.isEmpty()">
	                    OR
	                </when>
	                <otherwise>
	                    AND
	                </otherwise>
	            </choose>
	            (l.license_subcategory IN
	                <foreach item="minorCode" collection="minorCodes" open="(" separator="," close=")">
	                    #{minorCode}
	                </foreach>
	            )
	        </if>
	        <if test="kind != null and kind != ''">
	            AND l.license_type = #{kind}
	        </if>
	    ORDER BY l.license_maincategory
	</select>




	<!-- 	
	<select id="selectAnyCategories" parameterType="map" resultMap="searchLicenseBean">
	    SELECT
	        l.license_idx,
	        l.license_name,
	        l.license_maincategory AS majorCode,
	        l.license_subcategory AS minorCode,
	        e.exam_name,
	        e.exam_licensetype,
	        TO_CHAR(e.exam_receiptStartDate) AS receiptStartDate,
	        TO_CHAR(e.exam_receiptEndDate) AS exam_receiptEndDate,
	        TO_CHAR(e.exam_date) AS examDate
	    FROM license_table l
	    JOIN exam_table e ON l.license_type = e.exam_licensetype
	    WHERE e.exam_date > SYSDATE
	
	    <if test="selectAnyParams != null">
	        <foreach item="majorCategory" index="category" collection="selectAnyParams.entrySet()">
	            <if test="majorCategory.value != null">
	                OR (l.license_maincategory = #{category}
	                    <if test="majorCategory.value.minorCode != null">
	                        AND l.license_subcategory IN
	                        <foreach item="minor" collection="majorCategory.value.minorCode" open="(" separator="," close=")">
	                            #{minor}
	                        </foreach>
	                    </if>
	                )
	            </if>
	        </foreach>
	    </if>
	
	    <if test="minorCodes != null">
	        OR l.license_subcategory IN
	        <foreach item="minor" collection="minorCodes" open="(" separator="," close=")">
	            #{minor}
	        </foreach>
	    </if>
	
	    <if test="kind != null">
	        OR e.exam_licensetype = #{kind}
	    </if>
	
	    ORDER BY l.license_subcategory, e.exam_date
	</select>
	-->


	<!-- 	
	<select id="selectMajorCode" parameterType="list" resultMap="searchLicenseBean">
	    SELECT
	        l.license_idx,
	        l.license_name,
	        l.license_maincategory AS majorCode,
	        l.license_subcategory AS minorCode,
	        e.exam_name,
	        TO_CHAR(e.exam_receiptStartDate) AS receiptStartDate,
	        TO_CHAR(e.exam_receiptEndDate) AS exam_receiptEndDate,
	        TO_CHAR(e.exam_date) AS examDate
	    FROM license_table l
	    JOIN exam_table e ON l.license_type = e.exam_licensetype
	    <where>
	        e.exam_date > SYSDATE
	        <if test="majorCode != null">
	            AND l.license_maincategory IN
	            <foreach item="category" collection="majorCode" open="(" separator="," close=")">
	                #{category}
	            </foreach>
	        </if>
	    </where>
	</select>
	
	<select id="selectMinorCode" parameterType="list" resultMap="searchLicenseBean">
	    SELECT
	        l.license_idx,
	        l.license_name,
	        l.license_maincategory AS majorCode,
	        l.license_subcategory AS minorCode,
	        e.exam_name,
	        TO_CHAR(e.exam_receiptStartDate) AS receiptStartDate,
	        TO_CHAR(e.exam_receiptEndDate) AS exam_receiptEndDate,
	        TO_CHAR(e.exam_date) AS examDate
	    FROM license_table l
	    JOIN exam_table e ON l.license_type = e.exam_licensetype
	    <where>
	        e.exam_date > SYSDATE
	        <if test="minorCode != null">
	            AND l.license_subcategory IN
	            <foreach item="category" collection="minorCode" open="(" separator="," close=")">
	                #{category}
	            </foreach>
	        </if>
	    </where>
	</select>
	
	<select id="selectSchedule" parameterType="list" resultMap="searchLicenseBean">
	    SELECT
	        l.license_idx,
	        l.license_name,
	        l.license_maincategory AS majorCode,
	        l.license_subcategory AS minorCode,
	        e.exam_name,
	        TO_CHAR(e.exam_receiptStartDate, 'YYYY-MM-DD') AS receiptStartDate,
	        TO_CHAR(e.exam_receiptEndDate, 'YYYY-MM-DD') AS receiptEndDate,
	        TO_CHAR(e.exam_date, 'YYYY-MM-DD') AS examDate
	    FROM license_table l
	    JOIN exam_table e ON l.license_type = e.exam_licensetype
	    <where>
	        1=1
	        <if test="'notRegisted' in schedule">
	            AND e.exam_date > SYSDATE
	        </if>
	        <if test="'beRegisting' in schedule">
	            AND SYSDATE BETWEEN e.exam_receiptStartDate AND e.exam_receiptEndDate
	        </if>
	        <if test="'closeRegisted' in schedule">
	            AND TRUNC(SYSDATE) = e.exam_receiptEndDate
	        </if>
	    </where>
	    <choose>
	        <when test="'notRegisted' in schedule or 'closeRegisted' in schedule">
	            ORDER BY e.exam_date
	        </when>
	        <when test="'beRegisting' in schedule">
	            ORDER BY e.exam_receiptStartDate
	        </when>
	    </choose>
	</select>
	
	<select id="selectAnyCategories" parameterType="map" resultMap="searchLicenseBean">
	    SELECT
	        l.license_idx,
	        l.license_name,
	        l.license_maincategory AS majorCode,
	        l.license_subcategory AS minorCode,
	        e.exam_name,
	        TO_CHAR(e.exam_receiptStartDate, 'YYYY-MM-DD') AS receiptStartDate,
	        TO_CHAR(e.exam_receiptEndDate, 'YYYY-MM-DD') AS receiptEndDate,
	        TO_CHAR(e.exam_date, 'YYYY-MM-DD') AS examDate
	    FROM license_table l
	    JOIN exam_table e ON l.license_type = e.exam_licensetype
	    <where>
	        1=1
	        <if test="selectAnyParams['majorCode'] != null">
	            AND l.license_maincategory IN
	            <foreach item="category" index="index" collection="selectAnyParams['majorCode']" open="(" separator="," close=")">
	                #{category}
	            </foreach>
	        </if>
	        <if test="selectAnyParams['minorCode'] != null">
	            AND l.license_subcategory IN
	            <foreach item="category" index="index" collection="selectAnyParams['minorCode']" open="(" separator="," close=")">
	                #{category}
	            </foreach>
	        </if>
	        <if test="selectAnyParams['schedule'] != null and 'notRegisted' in selectAnyParams['schedule']">
	            AND e.exam_date > SYSDATE
	        </if>
	        <if test="selectAnyParams['schedule'] != null and 'beRegisting' in selectAnyParams['schedule']">
	            AND SYSDATE BETWEEN e.exam_receiptStartDate AND e.exam_receiptEndDate
	        </if>
	        <if test="selectAnyParams['schedule'] != null and 'closeRegisted' in selectAnyParams['schedule']">
	            AND TRUNC(SYSDATE) = e.exam_receiptEndDate
	        </if>
	    </where>
	    <choose>
	        <when test="selectAnyParams['schedule'] != null and ('notRegisted' in selectAnyParams['schedule'] or 'closeRegisted' in selectAnyParams['schedule'])">
	            ORDER BY e.exam_date
	        </when>
	        <when test="selectAnyParams['schedule'] != null and 'beRegisting' in selectAnyParams['schedule']">
	            ORDER BY e.exam_receiptStartDate
	        </when>
	    </choose>
	</select>
	 -->
</mapper>